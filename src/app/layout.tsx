import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Toaster } from "sonner";
import ClientProvider from "./client";
import { ClerkProvider } from "@clerk/nextjs";
import { currentUser } from "@clerk/nextjs/server";
import { fetchRedis } from "@/lib/hepper/redis";
import {
  getFriendRequestsByUserId,
  getFriendsByUserId,
} from "@/lib/hepper/get-friends";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const user = await currentUser();

  if (!user) {
    return (
      <div>
        <p>Please sign in</p>
      </div>
    );
  }
  const unseenRequests = (await fetchRedis(
    "smembers",
    `user:${user.id}:incoming_friend_requests`
  )) as string[];

  const friendRequests = await getFriendRequestsByUserId(user.id);

  const userFriends = await getFriendsByUserId(user.id);

  return (
    <ClerkProvider dynamic>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          {/* <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
        </ThemeProvider> */}
          <ClientProvider
            unseenRequestCount={unseenRequests.length}
            friendRequests={friendRequests}
            userFriends={userFriends}
          >
            {children}
          </ClientProvider>
          <Toaster richColors position="top-center" closeButton />
        </body>
      </html>
    </ClerkProvider>
  );
}
