import { fetchRedis } from "@/lib/hepper/redis";
import Image from "next/image";
import React from "react";
import { Metadata } from "next";

interface PageProps {
  params: Promise<{
    serverId: string;
  }>;
}

export async function generateMetadata({
  params,
}: PageProps): Promise<Metadata> {
  const { serverId } = await params;

  try {
    const data = await fetchRedis("get", `servers:${serverId}`);

    if (!data) {
      return {
        title: "Server Not Found",
        description: "The requested server does not exist",
      };
    }

    const serverData = JSON.parse(data);

    return {
      title: `Chat room ${serverData.serverName}`,
      description: "Generated by Cmanh",
    };
  } catch {
    return {
      title: "Server Error",
      description: "Failed to load server information",
    };
  }
}

const Page = async ({ params }: PageProps) => {
  const { serverId } = await params;

  try {
    // Fetch server details using serverId if needed
    const data = await fetchRedis("get", `servers:${serverId}`);

    if (!data) {
      return (
        <div>
          <h1>Server Not Found</h1>
          <p>The server with ID {serverId} does not exist.</p>
        </div>
      );
    }

    const serverData = JSON.parse(data);

    return (
      <div className="p-8">
        <h1>Server: {serverData.serverName}</h1>
        <p>Server ID: {serverId}</p>
        <Image
          src={serverData.serverImage}
          alt={serverData.serverName}
          width={100}
          height={100}
          className="rounded-lg"
        />
        <pre>{JSON.stringify(serverData, null, 2)}</pre>
      </div>
    );
  } catch (error) {
    return (
      <div>
        <h1>Error</h1>
        <p>Failed to load server data for {serverId}</p>
      </div>
    );
  }
};

export default Page;
